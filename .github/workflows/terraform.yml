# name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: us-east-2

      - name: Set Terraform Version
        run: echo "TERRAFORM_VERSION=1.9.8" >> $GITHUB_ENV

      - name: Install Terraform
        run: |
          curl -LO "https://releases.hashicorp.com/terraform/${{ env.TERRAFORM_VERSION }}/terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip"
          unzip -o terraform_${{ env.TERRAFORM_VERSION }}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Terraform Format
        run: |
          terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Validate
        run: |
          terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        run: |
          terraform plan
        working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve
        working-directory: ./terraform
        continue-on-error: false  # Ensures that any failure in this step stops the workflow

      - name: Output Terraform Plan
        run: |
          terraform show
        working-directory: ./terraform




# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
#           aws-region: us-east-2

#       - name: Install Terraform
#         run: |
#           curl -LO "https://releases.hashicorp.com/terraform/<TERRAFORM_VERSION>/terraform_<TERRAFORM_VERSION>_linux_amd64.zip"
#           unzip terraform_<TERRAFORM_VERSION>_linux_amd64.zip
#           sudo mv terraform /usr/local/bin/

#       - name: Terraform Format
#         run: |
#           terraform fmt -check
#         working-directory: ./terraform

#       - name: Terraform Validate
#         run: |
#           terraform validate
#         working-directory: ./terraform

#       - name: Terraform Plan
#         run: |
#           terraform plan
#         working-directory: ./terraform

#       - name: Terraform Apply
#         run: |
#           terraform apply -auto-approve
#         working-directory: ./terraform
#         continue-on-error: false  # Ensures that any failure in this step stops the workflow

#       - name: Output Terraform Plan
#         run: |
#           terraform show
#         working-directory: ./terraform


# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Configure AWS CLI
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
#           aws-region: <YOUR_AWS_REGION>

#       - name: Install Terraform
#         run: |
#           curl -LO "https://releases.hashicorp.com/terraform/<TERRAFORM_VERSION>/terraform_<TERRAFORM_VERSION>_linux_amd64.zip"
#           unzip terraform_<TERRAFORM_VERSION>_linux_amd64.zip
#           sudo mv terraform /usr/local/bin/

#       - name: Terraform Init
#         working-directory: ./terraform   # Set working directory to your Terraform folder
#         run: terraform init

#       - name: Terraform Apply
#         working-directory: ./terraform   # Set working directory to your Terraform folder
#         run: terraform apply -auto-approve
