name: Terraform CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering of the destroy job

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Assume IAM Role
        id: assume-role
        run: |
          ROLE_ARN="arn:aws:iam::755317065494:role/github-actions-secrets-manager-aws-credential-access-role"
          CREDENTIALS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name github-actions-session)
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV
        env:
          AWS_DEFAULT_REGION: us-east-2

      - name: Retrieve AWS Secrets
        id: retrieve-secrets
        run: |
          SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id my/aws/credentials --query 'SecretString' --output text)
          AWS_ACCESS_KEY_ID=$(echo $SECRET_JSON | jq -r '.AWS_ACCESS_KEY_ID')
          AWS_SECRET_ACCESS_KEY=$(echo $SECRET_JSON | jq -r '.AWS_SECRET_ACCESS_KEY')
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1.4.0
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform

      - name: Terraform Format
        run: |
          terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Validate
        run: |
          terraform validate
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Output Terraform Plan
        run: |
          terraform show tfplan
        working-directory: ./terraform

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./terraform/tfplan  # Adjust the path as necessary

  apply:
    runs-on: ubuntu-latest
    environment:
      name: production  # Specify the environment name here
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1.4.0
        with:
          terraform_version: 1.6.0

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./terraform  # Specify where to download the artifact

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ./terraform
        continue-on-error: false  # Ensures that any failure in this step stops the workflow

  destroy:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Runs only on manual triggers

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1.4.0
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve
        working-directory: ./terraform
